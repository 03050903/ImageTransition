package com.volokh.danylo.imagetransition.models;

import android.os.Parcel;
import android.os.Parcelable;
import android.widget.ImageView;

import java.io.File;

/**
 * Created by danylo.volokh on 2/21/2016.
 *
 * We use Parcelable in order it to store this model in bundle.
 *
 * NOTE: it is better to use some cache for models.(Maybe ORM)
 * Parcelable is more verbose then Serializable, but we use it because #PerfMatters
 */
public class Image implements Parcelable{

    public final int imageId;
    public final File imageFile;
    public final ImageView.ScaleType scaleType;

    /**
     * By default the image is visible but for the purpose of the animation it will be changed to invisible at some time.
     */
    private boolean mImageIsVisible = true;

    public Image(int imageId, File imageFile, ImageView.ScaleType imageScaleType) {
        this.imageId = imageId;
        this.imageFile = imageFile;
        this.scaleType = imageScaleType;
    }

    protected Image(Parcel in) {
        imageId = in.readInt();
        imageFile = (File) in.readSerializable();
        scaleType = (ImageView.ScaleType) in.readSerializable();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Image image = (Image) o;

        return imageId == image.imageId;
    }

    @Override
    public int hashCode() {
        return imageId;
    }

    /**
     * This is generated by studio
     */
    @Override
    public String toString() {
        return "Image{" +
                "imageId=" + imageId +
                ", imageFile=" + imageFile +
                ", scaleType=" + scaleType +
                ", mImageIsVisible=" + mImageIsVisible +
                '}';
    }

    public static final Creator<Image> CREATOR = new Creator<Image>() {
        @Override
        public Image createFromParcel(Parcel in) {
            return new Image(in);
        }

        @Override
        public Image[] newArray(int size) {
            return new Image[size];
        }
    };

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeInt(imageId);
        dest.writeSerializable(imageFile);
        dest.writeSerializable(scaleType);
    }

    public boolean isVisible() {
        return mImageIsVisible;
    }

    public void setVisibility(boolean isVisible){
        mImageIsVisible = isVisible;
    }
}
